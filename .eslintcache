[{"D:\\react\\whoshared\\src\\index.js":"1","D:\\react\\whoshared\\src\\reportWebVitals.js":"2","D:\\react\\whoshared\\src\\App.js":"3","D:\\react\\whoshared\\src\\pages\\home.js":"4","D:\\react\\whoshared\\src\\pages\\login.js":"5","D:\\react\\whoshared\\src\\pages\\profile.js":"6","D:\\react\\whoshared\\src\\pages\\friends-list.js":"7","D:\\react\\whoshared\\src\\pages\\chat-room.js":"8","D:\\react\\whoshared\\src\\lib\\contexts.js":"9","D:\\react\\whoshared\\src\\components\\loading-indicator.js":"10","D:\\react\\whoshared\\src\\lib\\assignProps.js":"11","D:\\react\\whoshared\\src\\lib\\hooks.js":"12","D:\\react\\whoshared\\src\\components\\withUserAuthentication.js":"13","D:\\react\\whoshared\\src\\components\\dialogs.js":"14","D:\\react\\whoshared\\src\\components\\buttons.js":"15","D:\\react\\whoshared\\src\\components\\layouts\\grid-layout.js":"16","D:\\react\\whoshared\\src\\components\\chat-room\\chat-box.js":"17","D:\\react\\whoshared\\src\\components\\chat-room\\chat-header.js":"18","D:\\react\\whoshared\\src\\components\\chat-room\\typing-users.js":"19","D:\\react\\whoshared\\src\\components\\chat-room\\inputs.js":"20","D:\\react\\whoshared\\src\\components\\header.js":"21","D:\\react\\whoshared\\src\\components\\footer.js":"22","D:\\react\\whoshared\\src\\components\\menu.js":"23","D:\\react\\whoshared\\src\\pages\\reports.js":"24"},{"size":501,"mtime":1611851241394,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":2216,"mtime":1613829314673,"results":"28","hashOfConfig":"26"},{"size":850,"mtime":1613062988339,"results":"29","hashOfConfig":"26"},{"size":3189,"mtime":1613752052997,"results":"30","hashOfConfig":"26"},{"size":5830,"mtime":1613062988339,"results":"31","hashOfConfig":"26"},{"size":2998,"mtime":1613062988339,"results":"32","hashOfConfig":"26"},{"size":7811,"mtime":1613918028591,"results":"33","hashOfConfig":"26"},{"size":171,"mtime":1612546799255,"results":"34","hashOfConfig":"26"},{"size":507,"mtime":1612188005796,"results":"35","hashOfConfig":"26"},{"size":377,"mtime":1613062988324,"results":"36","hashOfConfig":"26"},{"size":290,"mtime":1613062988324,"results":"37","hashOfConfig":"26"},{"size":669,"mtime":1613062988324,"results":"38","hashOfConfig":"26"},{"size":9006,"mtime":1613837004094,"results":"39","hashOfConfig":"26"},{"size":326,"mtime":1613412063243,"results":"40","hashOfConfig":"26"},{"size":671,"mtime":1613062988324,"results":"41","hashOfConfig":"26"},{"size":1732,"mtime":1613287640286,"results":"42","hashOfConfig":"26"},{"size":587,"mtime":1613287640286,"results":"43","hashOfConfig":"26"},{"size":2814,"mtime":1613287640286,"results":"44","hashOfConfig":"26"},{"size":719,"mtime":1613287640286,"results":"45","hashOfConfig":"26"},{"size":802,"mtime":1613412063243,"results":"46","hashOfConfig":"26"},{"size":449,"mtime":1612546799247,"results":"47","hashOfConfig":"26"},{"size":2997,"mtime":1613752457616,"results":"48","hashOfConfig":"26"},{"size":4811,"mtime":1613839340459,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"11bkagm",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\react\\whoshared\\src\\index.js",[],["102","103"],"D:\\react\\whoshared\\src\\reportWebVitals.js",[],"D:\\react\\whoshared\\src\\App.js",[],"D:\\react\\whoshared\\src\\pages\\home.js",[],"D:\\react\\whoshared\\src\\pages\\login.js",[],"D:\\react\\whoshared\\src\\pages\\profile.js",[],"D:\\react\\whoshared\\src\\pages\\friends-list.js",[],"D:\\react\\whoshared\\src\\pages\\chat-room.js",[],"D:\\react\\whoshared\\src\\lib\\contexts.js",[],"D:\\react\\whoshared\\src\\components\\loading-indicator.js",[],"D:\\react\\whoshared\\src\\lib\\assignProps.js",[],"D:\\react\\whoshared\\src\\lib\\hooks.js",[],"D:\\react\\whoshared\\src\\components\\withUserAuthentication.js",[],"D:\\react\\whoshared\\src\\components\\dialogs.js",["104"],"import React, { useRef, useState } from \"react\";\r\n\r\nimport \"./dialogs.scss\";\r\n\r\nfunction Reason({ name, value }) {\r\n  return (\r\n    <>\r\n      <input type=\"checkbox\" id={name} name={name} value={value} />\r\n      <label htmlFor={name}>{value}</label>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function ReportDialog(props) {\r\n  let [loading, setLoading] = useState(false);\r\n  let [dialogStatus, setDialogStatus] = useState(\"\");\r\n  let [errors, setErrors] = useState({});\r\n  let formRef = useRef();\r\n\r\n  let {\r\n    className = \"\",\r\n    visible,\r\n    reportUsername,\r\n    username,\r\n    close = () => {},\r\n    ...rest\r\n  } = props;\r\n  className += \" report-dialog\";\r\n\r\n  if (visible === false) return null;\r\n\r\n  const sendReasons = async function (e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    let reasons = [\r\n      formRef.current.reason1,\r\n      formRef.current.reason2,\r\n      formRef.current.reason3,\r\n      formRef.current.reason4,\r\n    ];\r\n    reasons = reasons.filter((r) => r.checked);\r\n    if (reasons.length === 0) {\r\n      setLoading(false);\r\n      return setErrors({ message: \"please select atleast one reason to send\" });\r\n    }\r\n    reasons = reasons.map((r) => r.value);\r\n    let res = await fetch(\"/user/report-user\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ reasons, reportUsername }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    res = await res.json();\r\n    if (res.ok) {\r\n      setDialogStatus(\"Report send succesfully\");\r\n    } else {\r\n      setDialogStatus(\"Someting went wrong try again later\");\r\n    }\r\n    setErrors({});\r\n    setTimeout(() => setDialogStatus(\"\"), 1500);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dialog-container\">\r\n      <h2 className=\"dialog-container__status\">{dialogStatus}</h2>\r\n      <div className={className} {...rest}>\r\n        <button className=\"report-dialog__close-btn\" onClick={close}>\r\n          X\r\n        </button>\r\n        <h2 className=\"report-dialog__title\">Report Dialog</h2>\r\n        <form\r\n          className=\"report-dialog__form\"\r\n          onSubmit={sendReasons}\r\n          ref={formRef}\r\n        >\r\n          <fieldset className=\"report-dialog__reasons\">\r\n            <legend className=\"report-dialog__reasons-title\">\r\n              Report {reportUsername} against.\r\n            </legend>\r\n            <Reason name=\"reason1\" value=\"Sent unwanted message\" />\r\n            <br />\r\n            <Reason name=\"reason2\" value=\"Missusing the application\" />\r\n            <br />\r\n            <Reason name=\"reason3\" value=\"I dont know the reason\" />\r\n            <br />\r\n            <Reason name=\"reason4\" value=\"Other\" />\r\n          </fieldset>\r\n          <p className=\"report-dialog__error\">{errors.message}</p>\r\n          <button\r\n            className={\r\n              loading\r\n                ? \"report-dialog__submit-btn ring-loader ring-loader--x-small\"\r\n                : \"report-dialog__submit-btn\"\r\n            }\r\n            disabled={loading}\r\n          >\r\n            submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst RemovePermentaly = React.memo(function ({ id, username }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const handle = async function () {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(`/admin/remove-user/${id}`, { method: \"DELETE\" });\r\n      if (res.ok) {\r\n        setStatus(\"Status: User removed sucessfully\");\r\n      } else if (res.status === 400) {\r\n        setStatus(\"Status: User Not found\");\r\n      } else {\r\n        throw new Error(\"server error\");\r\n      }\r\n    } catch (e) {\r\n      if (e.message === \"server error\")\r\n        setStatus(\"Status: Someting went wrong\");\r\n      else throw e;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <details className=\"take-action-dialog__action\">\r\n      <summary className=\"take-action-dialog__action-title\">\r\n        Remove {username} Permentaly\r\n      </summary>\r\n      <button\r\n        onClick={handle}\r\n        className={`take-action-dialog__action-btn ${\r\n          loading ? \"ring-loader ring-loader--x-small\" : \"\"\r\n        }`}\r\n      >\r\n        Remove Permentaly\r\n      </button>\r\n      <p className=\"take-action-dialog__action-status\">{status}</p>\r\n    </details>\r\n  );\r\n});\r\n\r\nconst BlockTemproverly = React.memo(function ({ id, username }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const handle = async function () {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(\"/admin/block-user-by\", {\r\n        method: \"post\",\r\n        body: JSON.stringify({ type: \"_id\", value: id }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (res.ok) {\r\n        setStatus(\"Status: User blocked sucessfully\");\r\n      } else if (res.status === 400) {\r\n        setStatus(\"Status: User Not found\");\r\n      } else {\r\n        throw new Error(\"server error\");\r\n      }\r\n    } catch (e) {\r\n      if (e.message === \"server error\")\r\n        setStatus(\"Status: Someting went wrong\");\r\n      else throw e;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <details className=\"take-action-dialog__action\">\r\n      <summary className=\"take-action-dialog__action-title\">\r\n        Block {username} Temproverly\r\n      </summary>\r\n      <button\r\n        onClick={handle}\r\n        className={`take-action-dialog__action-btn ${\r\n          loading ? \"ring-loader ring-loader--x-small\" : \"\"\r\n        }`}\r\n      >\r\n        Block Temproverly\r\n      </button>\r\n      <p className=\"take-action-dialog__action-status\">{status}</p>\r\n    </details>\r\n  );\r\n});\r\n\r\nconst SendNotification = React.memo(function ({ id, username }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [status, setStatus] = useState({\r\n    className: \"take-action-dialog__action-status\",\r\n    message: \"\",\r\n  });\r\n\r\n  const handle = async function () {\r\n    setLoading(true);\r\n    const status = {\r\n      className: \"take-action-dialog__action-status\",\r\n      message: \"\",\r\n    };\r\n    try {\r\n      const res = await fetch(\"/admin/send-warning\", {\r\n        method: \"post\",\r\n        body: JSON.stringify({ userId: id, message }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (res.ok) {\r\n        status.className += \" take-action-dialog__action-status--ok\";\r\n        status.message = \"Status: Message sent sucessfully\";\r\n      } else if (res.status === 400) {\r\n        status.className += \" take-action-dialog__action-status--wrong\";\r\n        status.message = \"Status: User Not found\";\r\n        setStatus(\"Status: User Not found\");\r\n      } else {\r\n        throw new Error(\"server error\");\r\n      }\r\n      setMessage(\"\");\r\n    } catch (e) {\r\n      if (e.message === \"server error\") {\r\n        status.className += \" take-action-dialog__action-status--wrong\";\r\n        status.message = \"Status: Someting went wrong\";\r\n      } else throw e;\r\n    } finally {\r\n      setStatus(status);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <details className=\"take-action-dialog__action\">\r\n      <summary className=\"take-action-dialog__action-title\">\r\n        Send Warning Notification To {username}\r\n      </summary>\r\n      <textarea\r\n        value={message}\r\n        rows=\"5\"\r\n        cols=\"30\"\r\n        placeholder=\"type...\"\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        className=\"take-action-dialog__action-textarea\"\r\n      />\r\n      <button\r\n        onClick={handle}\r\n        disabled={!Boolean(message)}\r\n        className={`take-action-dialog__action-btn ${\r\n          loading ? \"ring-loader ring-loader--x-small\" : \"\"\r\n        }`}\r\n      >\r\n        Send\r\n      </button>\r\n      <p className={status.className}>{status.message}</p>\r\n    </details>\r\n  );\r\n});\r\n\r\nexport function TakeActionDialog(props) {\r\n  let [dialogStatus, setDialogStatus] = useState(\"\");\r\n\r\n  let {\r\n    className = \"\",\r\n    visible,\r\n    id,\r\n    username,\r\n    close = () => {},\r\n    ...rest\r\n  } = props;\r\n  className += \" take-action-dialog\";\r\n\r\n  if (visible === false) return null;\r\n\r\n  return (\r\n    <div className=\"dialog-container dialog-container--white\">\r\n      <h2 className=\"dialog-container__status\">{dialogStatus}</h2>\r\n      <div className={className} {...rest}>\r\n        <div className=\"take-action-dialog__header\">\r\n          <h2 className=\"take-action-dialog__title\">\r\n            Take Action On {username}\r\n          </h2>\r\n          <button className=\"take-action-dialog__close-btn\" onClick={close}>\r\n            X\r\n          </button>\r\n        </div>\r\n        <div className=\"take-action-dialog__inputs\">\r\n          <RemovePermentaly id={id} username={username} />\r\n          <BlockTemproverly id={id} username={username} />\r\n          <SendNotification id={id} username={username} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\whoshared\\src\\components\\buttons.js",[],"D:\\react\\whoshared\\src\\components\\layouts\\grid-layout.js",[],"D:\\react\\whoshared\\src\\components\\chat-room\\chat-box.js",[],"D:\\react\\whoshared\\src\\components\\chat-room\\chat-header.js",[],"D:\\react\\whoshared\\src\\components\\chat-room\\typing-users.js",["105","106"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useUserAuth } from \"../../lib/hooks\";\r\n\r\nexport function TypingUsers(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const { user: currentUser = {} } = useUserAuth();\r\n  const {\r\n    className = \"\",\r\n    userTypingStarted,\r\n    userTypingStoped,\r\n    ...rest\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n\r\n    async function getUserStates() {\r\n      try {\r\n        const res = await fetch(\"/user/user-states\", {\r\n          signal: controller.signal,\r\n        });\r\n        if (res.ok) {\r\n          const u = await res.json();\r\n          // console.log(u);\r\n          setUsers(u);\r\n        }\r\n        setLoading(false);\r\n        setHasError(false);\r\n      } catch (e) {\r\n        console.log(e);\r\n        if (e.name !== \"AbortError\") {\r\n          setHasError(true);\r\n          setLoading(false);\r\n        }\r\n      }\r\n    }\r\n    getUserStates();\r\n    return () => controller.abort();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // changing the user typing state based on the props\r\n    let newUserState = users.map((user) => {\r\n      if (user.username === userTypingStarted.username)\r\n        return {\r\n          ...user,\r\n          isTyping: true,\r\n        };\r\n      return user;\r\n    });\r\n    setUsers(newUserState);\r\n  }, [userTypingStarted]);\r\n\r\n  useEffect(() => {\r\n    // changing the user typing state based on the props\r\n    let newUserState = users.map((user) => {\r\n      if (user.username === userTypingStoped.username)\r\n        return {\r\n          ...user,\r\n          isTyping: false,\r\n        };\r\n      return user;\r\n    });\r\n\r\n    setUsers(newUserState);\r\n  }, [userTypingStoped]);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className={className}>\r\n        <h2>Loading...</h2>\r\n      </div>\r\n    );\r\n\r\n  if (hasError)\r\n    return (\r\n      <div className={className}>\r\n        <h2>Something went wrong.</h2>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className={className} {...rest}>\r\n      <h2>Friends</h2>\r\n      {users.length > 0 ? (\r\n        <ul>\r\n          {users.map((user) =>\r\n            user.username === currentUser.username ? null : (\r\n              <li\r\n                key={user.username}\r\n                className={`chat-room__user-item ${\r\n                  user.isTyping ? \"chat-room__user-item--typing\" : \"\"\r\n                } ${\r\n                  user.logedin\r\n                    ? \"chat-room__user-item--online\"\r\n                    : \"chat-room__user-item--offline\"\r\n                }`}\r\n              >\r\n                <span>o</span>\r\n                {user.username}\r\n              </li>\r\n            )\r\n          )}\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\whoshared\\src\\components\\chat-room\\inputs.js",[],"D:\\react\\whoshared\\src\\components\\header.js",[],"D:\\react\\whoshared\\src\\components\\footer.js",[],"D:\\react\\whoshared\\src\\components\\menu.js",[],["107","108"],"D:\\react\\whoshared\\src\\pages\\reports.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":268,"column":22,"nodeType":"115","messageId":"116","endLine":268,"endColumn":37},{"ruleId":"117","severity":1,"message":"118","line":55,"column":6,"nodeType":"119","endLine":55,"endColumn":25,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"118","line":69,"column":6,"nodeType":"119","endLine":69,"endColumn":24,"suggestions":"121"},{"ruleId":"109","replacedBy":"122"},{"ruleId":"111","replacedBy":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'setDialogStatus' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["126"],["127"],["124"],["125"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [userTypingStarted, users]",{"range":"132","text":"133"},"Update the dependencies array to be: [userTypingStoped, users]",{"range":"134","text":"135"},[1427,1446],"[userTypingStarted, users]",[1776,1794],"[userTypingStoped, users]"]